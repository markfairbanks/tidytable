
R version 4.3.1 (2023-06-16) -- "Beagle Scouts"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: aarch64-apple-darwin20 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "ConfZIC"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('ConfZIC')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("Concrete")
> ### * Concrete
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: Concrete
> ### Title: Concrete Compressive Strength Data Set
> ### Aliases: Concrete
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(Concrete)
> 
> 
> 
> cleanEx()
> nameEx("RankReg")
> ### * RankReg
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: RankReg
> ### Title: Rank the regression models based on the confidence envelope for
> ###   minimum ZIC
> ### Aliases: RankReg
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("RankTS")
> ### * RankTS
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: RankTS
> ### Title: Rank the time series (ARMA) models based on the confidence
> ###   envelope for minimum ZIC
> ### Aliases: RankTS
> 
> ### ** Examples
> 
> 
> 
> 
> cleanEx()
> nameEx("Sunspots")
> ### * Sunspots
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: Sunspots
> ### Title: Number of sunspots, 1770 to 1869
> ### Aliases: Sunspots
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(Sunspots)
> 
> 
> 
> cleanEx()
> nameEx("regZIC.test")
> ### * regZIC.test
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: regZIC.test
> ### Title: Test whether two ZIC values differ significantly based on
> ###   minimum ZIC for regression data
> ### Aliases: regZIC.test
> 
> ### ** Examples
> 
> library(ConfZIC)
> data(Concrete)
> x=Concrete
> Y=x[,9] #dependent variable
> #independent variables
> X1=x[,1];X2=x[,2];X3=x[,3];X4=x[,4];
> X5=x[,5];X6=x[,6];X7=x[,7];X8=x[,8];
> mydata=cbind(Y,X1,X2,X3,X4,X5,X6,X7,X8) #data matrix
> model1=lm(Y~X1); model2=lm(Y~X1+X2)
> regZIC.test(model1,model2,model_ZIC="BIC",data=mydata,alpha=0.05)
p-value is 0, and test is significant at level 0.05
> 
> 
> 
> cleanEx()
> nameEx("tsZIC.test")
> ### * tsZIC.test
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: tsZIC.test
> ### Title: Test whether two ZIC values differ significantly based on
> ###   minimum ZIC for time series data
> ### Aliases: tsZIC.test
> 
> ### ** Examples
> 
> library(ConfZIC)
> data(Sunspots)
> x=Sunspots
> model1=try(arima(x,order=c(1,0,1),method="ML",include.mean=FALSE),silent = TRUE)
> model2=try(arima(x,order=c(1,0,0),method="ML",include.mean=FALSE),silent = TRUE)
> tsZIC.test(x,model1,model2,model_ZIC="AIC",alpha=0.05)
p-value is 0, and test is significant at level 0.05
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.84 0.068 1.316 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
